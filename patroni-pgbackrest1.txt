                             Configure and Install Pgbackrest


1 Install pgBackRest package
sudo yum install pgbackrest 
PATH to my pgbackrest: 
export PATH=/opt/app/pgbackrest/bin:/opt/app/pgsql-client/bin:$PATH

2 Exchange ssh keys to allow password-less login between all 3 hosts 
On pgbackup Server (as svcpostgres user):
# Create .ssh directory
mkdir -m 750 /opt/app/localhome/svcpostgres/.ssh
# Generate SSH key pair
ssh-keygen -f  /opt/app/localhome/svcpostgres/.ssh/id_rsa -t rsa -b 4096 -N ""

On qv1medpgc1 Server (as svcpostgres user):
# Create .ssh directory
mkdir -m 750 -p /opt/app/localhome/svcpostgres/.ssh
# Generate SSH key pair
ssh-keygen -f /opt/app/localhome/svcpostgres/.ssh/id_rsa -t rsa -b 4096 -N ""

On qv1medpgc2 Server (as svcpostgres user):
# Create .ssh directory
mkdir -m 750 -p /opt/app/localhome/svcpostgres/.ssh
# Generate SSH key pair
ssh-keygen -f /opt/app/localhome/svcpostgres/.ssh/id_rsa -t rsa -b 4096 -N ""

Exchange Public Keys:
On backup server manually copy public_key content and paste in the manually created authorized_keys on database servers. The authorized_keys file has to be manually created on all servers before sharing keys.
touch authorized_keys
chmod 600 authorized_keys
After these steps, you should be able to SSH between the servers without being prompted for a password.
Always ensure that the permissions on the ~/.ssh directory and the authorized_keys file are set correctly for security reasons:
# On pgbackup
chmod 700 /opt/app/localhome/svcpostgres/.ssh
chmod 600 /opt/app/localhome/svcpostgres/.ssh/authorized_keys
chmod 600 /opt/app/localhome/svcpostgres/.ssh/id_rsa
chmod 644 /opt/app/localhome/svcpostgres/.ssh/id_rsa.pub

# On qv1medpgc1
chmod 700 /opt/app/localhome/svcpostgres/.ssh
chmod 600 /opt/app/localhome/svcpostgres/.ssh/authorized_keys
chmod 600 /opt/app/localhome/svcpostgres/.ssh/id_rsa
chmod 644 /opt/app/localhome/svcpostgres/.ssh/id_rsa.pub

# On qv1medpgc2
chmod 700 /opt/app/localhome/svcpostgres /.ssh
chmod 600 /opt/app/localhome/svcpostgres /.ssh/authorized_keys
chmod 600 /opt/app/localhome/svcpostgres/.ssh/id_rsa
chmod 644 /opt/app/localhome/svcpostgres/.ssh/id_rsa.pub


To test if the SSH setup is working:
From pv2medpgbr1 (pgbackup) to db1:
ssh svcpostgres@qv1medpgc1
ssh svcpostgres@qv1medpgc2

From qv1medpgc1 to pgbackup:
ssh svcpostgres@pv2medpgbr1

From qv1medpgc2 to pgbackup:
ssh svcpostgres@pv2medpgbr1

We need to configure svcpostgres user profile on all servers to enable pgbackrest connect and run commands successfully .
Backupserver pv2medpgbr1
In .bashrc file export bellow path;
export PATH=/opt/app/pgbackrest/bin:/opt/app/pgsql-client/bin:$PATH
export PATH=$PATH:/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf
Database Server qv1medpgc1
In .bashrc file export bellow path
source /opt/app/localhome/svcpostgres/pg_env.sh
export PGHOST=localhost
export PATH=/opt/app/postgresql/bin:$PATH
export PATH=/opt/app/pgbackrest/bin:/opt/app/pgsql-client/bin:/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf:/opt/app/localhome/postgres/.local/bin:/opt/app/localhome/postgres/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/app/python/bin:$PATH
Database Server qv1medpgc2
In .bashrc file export bellow path
source /opt/app/localhome/svcpostgres/pg_env.sh
export PGHOST=localhost
export PATH=/opt/app/postgresql/bin:$PATH
export PATH=/opt/app/pgbackrest/bin:/opt/app/pgsql-client/bin:/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf:/opt/app/localhome/postgres/.local/bin:/opt/app/localhome/postgres/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/app/python/bin:$PATH

3 Create the log and pgBackRest repository in backup server
sudo mkdir -p /opt/backup/pgbackrest
sudo chmod 750 /opt/backup/pgbackrest
sudo chown svcpostgres:svcpostgres /opt/backup/pgbackrest
sudo mkdir -p /opt/backup/log/pgbackrest
sudo chmod 750  /opt/backup/log/pgbackrest
sudo chmod svcpostgres:svcpostgres /opt/log/pgbackrest


4 Configure pgBackrest in the /opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf 
mkdir -p /opt/app/pgbackrest-data/pgbackrest
chmod 750 /opt/app/pgbackrest-data/pgbackrest
touch /opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf
chmod 640 /opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf
vi ls -la  and pass bellow parameters:

[global]
# Server repo details
repo1-path=/opt/backup/pgbackrest
repo1-retention-archive-type=full
repo1-retention-full=2
process-max=4
log-path=/opt/backup/log/pgbackrest
log-level-console=info
log-level-file=info
start-fast=y
backup-standby=y

### Clusters and nodes ###
[pgqa1]
pg1-host=qv1medpgc1
pg1-host-user=svcpostgres
pg1-port=5432
pg1-path=/opt/app/postgres-data/data
pg2-host=qv1medpgc2
pg2-host-user=svcpostgres
pg2-port=5432
pg2-path=/opt/app/postgres-data/data
[wgroup1]
pg1-host=qv1medpgw1
pg1-host-user=svcpostgres
pg1-port=5432
pg1-path=/opt/app/postgres-data/data
pg2-host=qv1medpgw2
pg2-host-user=svcpostgres
pg2-port=5432
pg2-path=/opt/app/postgres-data/data
[wgroup2]
pg1-host=qv1medpgw3
pg1-host-user=svcpostgres
pg1-port=5432
pg1-path=/opt/app/postgres-data/data
pg2-host=qv1medpgw4
pg2-host-user=svcpostgres
pg2-port=5432
pg2-path=/opt/app/postgres-data/data
5 Configure Database Servers
Create the configuration file in qv1medpgc1 and qv1medpgc2. 
mkdir -p /opt/app/pgbackrest-data/pgbackrest
chmod 750 /opt/app/pgbackrest-data/pgbackrest
touch /opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf
chmod 640 /opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf
vi /opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf
[global]
repo1-host= pv2medpgbr1
repo1-path=/opt/backup/pgbackrest/
repo1-host-user=svcpostgres
process-max=4
log-level-console=info
log-level-file=detail

[pgqa1]
pg1-path= /opt/app/postgres-data/data
pg1-port=5432

[pgqa1]
Pg2-path= /opt/app/postgres-data/data   for dv1medpgsc2

6  Change Patroni configuration to use pgBackRest. Run this command on one node only
On qv1medpgc1 edit the /opt/app/patroni/patroni.yml  file
For example:
loop_wait: 10
maximum_lag_on_failover: 1048576
postgresql:
  parameters:
    archive_command: /opt/app/pgbackrest-2.49/bin/pgbackrest --cmd-ssh=/usr/bin/ssh --stanza=pgqa1 --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf archive-push %p
    archive_mode: true
    archive_timeout: 1800s
    hot_standby: true
    logging_collector: 'on'
    max_replication_slots: 10
    max_wal_senders: 5
    wal_keep_size: 4096
    wal_level: logical
    wal_log_hints: true
  recovery_conf:
    recovery_target_timeline: latest
    restore_command: pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=stanza archive-get %f "%p"
  use_pg_rewind: true
  use_slots: true
retry_timeout: 10
slots:
  percona_cluster_1:
    type: physical


7 Run Backup 

First create stanza

pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info stanza-create
To delete stanza
pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info stanza-delete

Run check command bellow to ensure archiving and backups are properly configured.
pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info check


Take First Full Backup (must be run from repository host):
Full backup copies all files in a database cluster

pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info --type=full backup

Differential backup
Differential backup only copies files that have changed since the last full backup. It is smaller than a full backup, but to restore it you will need the base full backup

pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info â€“type=diff backup


How to verify backup related information run:
pgbackrest info --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1

Schedule pgBackrest Full baclup on Saturday and Differential backup every day :

# Schedule a full backup on Sundays
00 3 * * 0 /opt/app/pgbackrest/bin/pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info --type=full backup

# Schedule a differential backup every 
00 3 * * 1-6 /opt/app/pgbackrest/bin/pgbackrest --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --stanza=pgqa1 --log-level-console=info --type=diff backup








